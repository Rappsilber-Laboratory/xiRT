# preprocessing options:
# le: str, label encoder location
# max_length: float, max length of sequences
preprocessing:
    le: None
    max_length: -1 # -1
    cl_residue: True
    filter: ""
# train and transfer share the same options that are necessary to run xiML, here is a brief rundown:
# fdr: float, a FDR cutoff for peptide matches to be included in the training process
# ncv: int, number of CV folds to perform to avoid training/prediction on the same data
# mode: str, must be one of train, crossvalidation, predict
# augment: bool, if data augmentation should be performed
# sequence_type: str, must be linear, crosslink, pseudolinear. crosslink uses the siamese network
# pretrained_weights: "None", str location of neural network weights. Only embedding/RNN weights
#   are loaded. pretrained weights can be used with all modes, essentially resembling a transfer
#   learning set-up
# sample_frac: float, (0, 1) used for downsampling the input data (e.g. for learning curves).
#   Usually, left to 1 if all data should be used for training
# sample_state: int, random state to be used for shuffling the data. Important for recreating
#   results.
train:
  fdr: 0.01
  ncv: 1
  mode: "train" # other modes are: train / crossvalidation / predict
  augment: False
  sequence_type: "linear"
  pretrained_weights: "None"
  pretrained_model: "None"
  test_frac: 0.10
  sample_frac: 1
  sample_state: 21
  refit: True
